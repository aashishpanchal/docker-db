services:
  postgres:
    image: postgres
    restart: always
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=pass
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - docker-db
  mysql:
    image: mysql
    restart: always
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=pass # if you login with root, username is 'root'
    ports:
      - 3306:3306 # make sure you don't have another container running on 3306
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - docker-db
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data
    networks:
      - docker-db
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - 27017:27017 # make sure we don't have another mongo container running on same port
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ./data/mongo:/data/db
    networks:
      - docker-db
  adminer:
    image: adminer
    restart: always
    container_name: adminer
    ports:
      - 8080:8080 # make sure you don't have another container running on 8080
    environment:
      - ADMINER_DEFAULT_SERVER=mysql # Change to mysql to connect to MySQL
      - ADMINER_DESIGN=pma-dark
      - ADMINER_USER=admin
      - ADMINER_PASSWORD=root
    networks:
      - docker-db
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    ports:
      - 5050:5050 # make sure you don't have another container running on 5050
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    networks:
      - docker-db
  redis_insight:
    image: redislabs/redisinsight
    restart: always
    container_name: redis_insight
    ports:
      - "5540:5540" # Expose RedisInsight on localhost:5540
    environment:
      REDISINSIGHT_ALLOW_DEFAULT_PASSWORD: "yes"
    networks:
      - docker-db

networks:
  docker-db:
